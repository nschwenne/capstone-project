{"version":3,"sources":["components/NavBar.js","components/LoginForm.js","components/SignUpForm.js","pages/Login.js","pages/NewCharacter.js","pages/CharacterList.js","components/UpdateCharacter.js","components/App.js","reportWebVitals.js","index.js"],"names":["NavBar","user","setUser","to","onClick","fetch","method","then","r","ok","json","window","location","reload","LoginForm","onLogin","useState","username","setUsername","password","setPassword","errors","setErrors","setIsLoading","onSubmit","e","preventDefault","headers","body","JSON","stringify","err","htmlFor","type","id","autoComplete","value","onChange","target","map","SignUpForm","passwordConfirmation","setPasswordConfirmation","imageUrl","setImageUrl","bio","setBio","isLoading","password_confirmation","image_url","rows","Login","showLogin","setShowLogin","NewCharacter","name","setName","klass","setKlass","level","setLevel","history","useHistory","push","CharacterList","characters","setCharacters","useEffect","length","character","deleteFunction","localStorage","setItem","setData","UpdateCharacter","setID","getItem","response","goBack","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8QAoCeA,MAjCf,YAAmC,EAAjBC,KAAkB,IAAZC,EAAW,EAAXA,QAmBlB,OACI,gCACI,8BACA,cAAC,IAAD,CAAMC,GAAG,IAAT,6BAEA,gCACI,cAAC,IAAD,CAAMA,GAAG,OAAT,2BACA,wBAAQC,QAxBtB,WACIC,MAAM,UAAW,CAAEC,OAAQ,WAAYC,MAAK,SAACC,GACvCA,EAAEC,IACJP,EAAQ,UAqBF,oBACA,wBAAQE,QAjBrB,WACEC,MAAM,SAAU,CACdC,OAAQ,WAETC,MAAK,SAACC,GAAD,OAAOA,EAAEE,UACfC,OAAOC,SAASC,UAYL,mCC+BHC,MA1Df,YAAiC,IAAZC,EAAW,EAAXA,QACnB,EAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAA4BJ,mBAAS,IAArC,mBAAOK,EAAP,KAAeC,EAAf,KACA,EAAkCN,oBAAS,GAA3C,mBAAkBO,GAAlB,WAqBA,OACE,uBAAMC,SApBR,SAAsBC,GACpBA,EAAEC,iBACFH,GAAa,GACblB,MAAM,SAAU,CACdC,OAAQ,OACRqB,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CAAEb,WAAUE,eAChCZ,MAAK,SAACC,GACPe,GAAa,GACTf,EAAEC,GACJD,EAAEE,OAAOH,MAAK,SAACN,GAAD,OAAUc,EAAQd,MAEhCO,EAAEE,OAAOH,MAAK,SAACwB,GAAD,OAAST,EAAUS,EAAIV,eAMzC,UAEI,uBAAOW,QAAQ,WAAf,wBACA,uBACA,uBACEC,KAAK,OACLC,GAAG,WACHC,aAAa,MACbC,MAAOnB,EACPoB,SAAU,SAACZ,GAAD,OAAOP,EAAYO,EAAEa,OAAOF,UAExC,uBACA,uBAAOJ,QAAQ,WAAf,wBACA,uBACA,uBACEC,KAAK,WACLC,GAAG,WACHC,aAAa,mBACbC,MAAOjB,EACPkB,SAAU,SAACZ,GAAD,OAAOL,EAAYK,EAAEa,OAAOF,UAE1C,uBACE,uBAAOH,KAAK,SAASG,MAAM,WAE1Bf,EAAOkB,KAAI,SAACR,GAAD,OACV,gCAAkBA,GAANA,UC6CPS,MAhGf,YAAkC,IAAZzB,EAAW,EAAXA,QAClB,EAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAwDJ,mBAAS,IAAjE,mBAAOyB,EAAP,KAA6BC,EAA7B,KACA,EAAgC1B,mBAAS,IAAzC,mBAAO2B,EAAP,KAAiBC,EAAjB,KACA,EAAsB5B,mBAAS,IAA/B,mBAAO6B,EAAP,KAAYC,EAAZ,KACA,EAA4B9B,mBAAS,IAArC,mBAAOK,EAAP,KAAeC,EAAf,KACA,EAAkCN,oBAAS,GAA3C,mBAAO+B,EAAP,KAAkBxB,EAAlB,KA6BA,OACI,uBAAMC,SA5BV,SAAsBC,GACpBA,EAAEC,iBACFJ,EAAU,IACVC,GAAa,GACblB,MAAM,UAAW,CACfC,OAAQ,OACRqB,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnBb,WACAE,WACA6B,sBAAuBP,EACvBQ,UAAWN,EACXE,UAEDtC,MAAK,SAACC,GACPe,GAAa,GACTf,EAAEC,GACJD,EAAEE,OAAOH,MAAK,SAACN,GAAD,OAAUc,EAAQd,MAEhCO,EAAEE,OAAOH,MAAK,SAACwB,GAAD,OAAST,EAAUS,EAAIV,eAOvC,UACA,uBAAOW,QAAQ,WAAf,uBACA,uBACA,uBACEC,KAAK,OACLC,GAAG,WACHC,aAAa,MACbC,MAAOnB,EACPoB,SAAU,SAACZ,GAAD,OAAOP,EAAYO,EAAEa,OAAOF,UAExC,uBACA,uBAAOJ,QAAQ,WAAf,uBACA,uBACA,uBACEC,KAAK,WACLC,GAAG,WACHE,MAAOjB,EACPkB,SAAU,SAACZ,GAAD,OAAOL,EAAYK,EAAEa,OAAOF,QACtCD,aAAa,qBAEjB,uBACE,uBAAOH,QAAQ,WAAf,oCACA,uBACA,uBACEC,KAAK,WACLC,GAAG,wBACHE,MAAOK,EACPJ,SAAU,SAACZ,GAAD,OAAOiB,EAAwBjB,EAAEa,OAAOF,QAClDD,aAAa,qBAEnB,uBACI,uBAAOH,QAAQ,WAAf,4BACA,uBACA,uBACEC,KAAK,OACLC,GAAG,WACHE,MAAOO,EACPN,SAAU,SAACZ,GAAD,OAAOmB,EAAYnB,EAAEa,OAAOF,UAE1C,uBACE,uBAAOJ,QAAQ,MAAf,kBACA,uBACA,0BACEkB,KAAK,IACLhB,GAAG,MACHE,MAAOS,EACPR,SAAU,SAACZ,GAAD,OAAOqB,EAAOrB,EAAEa,OAAOF,UAEtC,uBACG,wBAAQH,KAAK,SAAb,SAAuBc,EAAY,aAAe,aAEjD1B,EAAOkB,KAAI,SAACR,GAAD,OACV,gCAAkBA,GAANA,UCzDPoB,MA/Bf,YAA6B,IAAZpC,EAAW,EAAXA,QACb,EAAkCC,oBAAS,GAA3C,mBAAOoC,EAAP,KAAkBC,EAAlB,KAEA,OAEI,gCACI,+CACCD,EACD,gCACA,cAAC,EAAD,CAAWrC,QAASA,IACpB,uDAEI,uBACA,wBAAQX,QAAS,kBAAMiD,GAAa,IAApC,4BAIJ,gCACI,cAAC,EAAD,IACA,yDAEI,uBACA,wBAAQjD,QAAS,kBAAMiD,GAAa,IAApC,+BCyCLC,MAhEf,YAAgC,EAARrD,KAAS,IAChC,EAAwBe,qBAAxB,mBAAOuC,EAAP,KAAaC,EAAb,KACA,EAA0BxC,qBAA1B,mBAAOyC,EAAP,KAAcC,EAAd,KACA,EAA0B1C,qBAA1B,mBAAO2C,EAAP,KAAcC,EAAd,KACA,EAA4B5C,mBAAS,IAArC,mBAAeM,GAAf,WACA,EAAkCN,oBAAS,GAA3C,mBAAkBO,GAAlB,WACMsC,EAAUC,cA0Bf,OACI,gCACI,kDACA,uBAAMtC,SA3Bf,SAAsBC,GACnBA,EAAEC,iBACFH,GAAa,GACblB,MAAM,cAAe,CACnBC,OAAQ,OACRqB,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnByB,OACAE,QACAE,YAEDpD,MAAK,SAACC,GACPe,GAAa,GACTf,EAAEC,GACJoD,EAAQE,KAAK,KAEbvD,EAAEE,OAAOH,MAAK,SAACwB,GAAD,OAAST,EAAUS,EAAIV,eASnC,UACI,uBAAOW,QAAQ,OAAf,oBACA,uBACAC,KAAK,OACLC,GAAG,OACHE,MAAOmB,EACPlB,SAAW,SAACZ,GAAD,OAAO+B,EAAQ/B,EAAEa,OAAOF,UACnC,uBACA,uBAAOJ,QAAQ,QAAf,qBACA,uBACAC,KAAK,OACLC,GAAG,QACHE,MAAOqB,EACPpB,SAAU,SAACZ,GAAD,OAAOiC,EAASjC,EAAEa,OAAOF,UACnC,uBACA,uBAAOJ,QAAQ,QAAf,qBACA,uBACAC,KAAK,SACLC,GAAG,QACHE,MAAOuB,EACPtB,SAAU,SAACZ,GAAD,OAAOmC,EAASnC,EAAEa,OAAOF,UACnC,wBAAQH,KAAK,SAAb,sCCCC+B,MAxDf,WACI,MAAoChD,mBAAS,IAA7C,mBAAOiD,EAAP,KAAmBC,EAAnB,KAwBE,OAtBFC,qBAAU,WACN9D,MAAM,eACHE,MAAK,SAACC,GAAD,OAAOA,EAAEE,UACdH,KAAK2D,KACP,IAmBC,8BACKD,EAAWG,OAAS,EACjBH,EAAW1B,KAAI,SAAC8B,GAAD,OACX,gCACI,8BACI,8BACI,uBADJ,SAEWA,EAAUd,KACjB,uBAHJ,UAIYc,EAAUZ,MAClB,uBALJ,UAMYY,EAAUV,MAClB,4BAGR,wBAAQvD,QAAS,YAvBrC,SAAwBiE,GACtBhE,MAAO,eAAiBgE,EAAUnC,GAClC,CACI5B,OAAQ,WAEZK,OAAOC,SAASC,SAmBHyD,CAAeD,IADV,oBAZJ,KAckB,cAAC,IAAD,CAAMlE,GAAG,UAAUC,QAAS,kBAlC9D,SAAiBiE,GACb,IAAMnC,EAA2BmC,EAA3BnC,GAAIqB,EAAuBc,EAAvBd,KAAME,EAAiBY,EAAjBZ,MAAOE,EAAUU,EAAVV,MACvBY,aAAaC,QAAQ,KAAMtC,GAC3BqC,aAAaC,QAAQ,OAAQjB,GAC7BgB,aAAaC,QAAQ,QAASf,GAC9Bc,aAAaC,QAAQ,QAASb,GA6BkCc,CAAQJ,IAA1C,sBAdRA,EAAUnC,OAkBxB,gCACI,qDACA,cAAC,IAAD,CAAM/B,GAAG,OAAT,yCCcPuE,MAhEf,WACI,MAAoB1D,qBAApB,mBAAOkB,EAAP,KAAWyC,EAAX,KACA,EAAwB3D,qBAAxB,mBAAOuC,EAAP,KAAaC,EAAb,KACA,EAA0BxC,qBAA1B,mBAAOyC,EAAP,KAAcC,EAAd,KACA,EAA0B1C,qBAA1B,mBAAO2C,EAAP,KAAcC,EAAd,KAEAO,qBAAU,WACNQ,EAAMJ,aAAaK,QAAQ,OAC3BpB,EAAQe,aAAaK,QAAQ,SAC7BlB,EAASa,aAAaK,QAAQ,UAC9BhB,EAASW,aAAaK,QAAQ,YACnC,IAEH,IAAMf,EAAUC,cAmBZ,OACQ,gCACI,kDACA,uBAAMtC,SApBtB,SAAsBC,GAClBA,EAAEC,iBACNrB,MAAO,eAAiB6B,EACxB,CACA5B,OAAQ,MACRqB,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnByB,OACAE,QACAE,YAECpD,MAAK,SAAAsE,GAAQ,OAAIA,EAASnE,UAC7BmD,EAAQiB,UAMQ,UACI,uBAAO9C,QAAQ,OAAf,oBACA,uBACAC,KAAK,OACLC,GAAG,OACHE,MAAOmB,EACPlB,SAAW,SAACZ,GAAD,OAAO+B,EAAQ/B,EAAEa,OAAOF,UACnC,uBACA,uBAAOJ,QAAQ,QAAf,qBACA,uBACAC,KAAK,OACLC,GAAG,QACHE,MAAOqB,EACPpB,SAAU,SAACZ,GAAD,OAAOiC,EAASjC,EAAEa,OAAOF,UACnC,uBACA,uBAAOJ,QAAQ,QAAf,qBACA,uBACAC,KAAK,SACLC,GAAG,QACHE,MAAOuB,EACPtB,SAAU,SAACZ,GAAD,OAAOmC,EAASnC,EAAEa,OAAOF,UACnC,wBAAQH,KAAK,SAAb,2BCnBL8C,MA/Bf,WACI,MAAwB/D,mBAAS,MAAjC,mBAAOf,EAAP,KAAaC,EAAb,KASA,OAPAiE,qBAAU,WACN9D,MAAM,OAAOE,MAAK,SAACC,GACXA,EAAEC,IACFD,EAAEE,OAAOH,MAAK,SAACN,GAAD,OAAUC,EAAQD,WAGzC,IACEA,EAGL,eAAC,IAAD,WACA,cAAC,EAAD,CAAQA,KAAMA,EAAMC,QAASA,IAC7B,eAAC,IAAD,WACI,cAAC,IAAD,CAAO8E,KAAK,OAAZ,SACA,cAAC,EAAD,CAAc/E,KAAMA,MAEpB,cAAC,IAAD,CAAO+E,KAAK,UAAZ,SACI,cAAC,EAAD,MAEJ,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACI,cAAC,EAAD,YAbU,cAAC,EAAD,CAAOjE,QAASb,KCPvB+E,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB5E,MAAK,YAAkD,IAA/C6E,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1BZ,M","file":"static/js/main.7267c57e.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction NavBar({ user, setUser }) {\n\n    function handleLogout() {\n        fetch(\"/logout\", { method: \"DELETE\" }).then((r) => {\n          if (r.ok) {\n            setUser(null);\n          }\n        });\n      }\n\n     function handleDelete() {\n       fetch(\"/users\", {\n         method: \"DELETE\",\n       })\n       .then((r) => r.json())\n       window.location.reload()\n     }\n       \n      \n      return (\n          <div>\n              <div>\n              <Link to=\"/\">Character App</Link>\n              </div>\n              <div>\n                  <Link to=\"/new\">New Character</Link>\n                  <button onClick={handleLogout}>Logout</button>\n                  <button onClick={handleDelete}>Delete Account</button>\n              </div>\n          </div>\n      )\n}\n\nexport default NavBar;","import React, { useState } from \"react\";\n\n\nfunction LoginForm({ onLogin }) {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    setIsLoading(true);\n    fetch(\"/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ username, password }),\n    }).then((r) => {\n      setIsLoading(false);\n      if (r.ok) {\n        r.json().then((user) => onLogin(user));\n      } else {\n        r.json().then((err) => setErrors(err.errors));\n      }\n    });\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n     \n        <label htmlFor=\"username\">Username: </label>\n        <br/>\n        <input\n          type=\"text\"\n          id=\"username\"\n          autoComplete=\"off\"\n          value={username}\n          onChange={(e) => setUsername(e.target.value)}\n        />\n        <br/>\n        <label htmlFor=\"password\">Password: </label>\n        <br/>\n        <input\n          type=\"password\"\n          id=\"password\"\n          autoComplete=\"current-password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        /> \n      <br/>\n        <input type=\"submit\" value=\"Login!\"/>\n     \n        {errors.map((err) => (\n          <error key={err}>{err}</error>\n        ))}\n     \n    </form>\n  );\n}\n\nexport default LoginForm;\n","import React, { useState } from \"react\";\n\n\nfunction SignUpForm({ onLogin }) {\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [passwordConfirmation, setPasswordConfirmation] = useState(\"\");\n    const [imageUrl, setImageUrl] = useState(\"\");\n    const [bio, setBio] = useState(\"\");\n    const [errors, setErrors] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n  \n    function handleSubmit(e) {\n      e.preventDefault();\n      setErrors([]);\n      setIsLoading(true);\n      fetch(\"/signup\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          username,\n          password,\n          password_confirmation: passwordConfirmation,\n          image_url: imageUrl,\n          bio,\n        }),\n      }).then((r) => {\n        setIsLoading(false);\n        if (r.ok) {\n          r.json().then((user) => onLogin(user));\n        } else {\n          r.json().then((err) => setErrors(err.errors));\n        }\n      });\n    }\n\n\n    return (\n        <form onSubmit={handleSubmit}>\n        <label htmlFor=\"username\">Username:</label>\n        <br/>\n        <input\n          type=\"text\"\n          id=\"username\"\n          autoComplete=\"off\"\n          value={username}\n          onChange={(e) => setUsername(e.target.value)}\n        />\n        <br/>\n        <label htmlFor=\"password\">Password:</label>\n        <br/>\n        <input\n          type=\"password\"\n          id=\"password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          autoComplete=\"current-password\"\n        />\n      <br/>\n        <label htmlFor=\"password\">Password Confirmation:</label>\n        <br/>\n        <input\n          type=\"password\"\n          id=\"password_confirmation\"\n          value={passwordConfirmation}\n          onChange={(e) => setPasswordConfirmation(e.target.value)}\n          autoComplete=\"current-password\"\n        />\n    <br/>\n        <label htmlFor=\"imageUrl\">Profile Image:</label>\n        <br/>\n        <input\n          type=\"text\"\n          id=\"imageUrl\"\n          value={imageUrl}\n          onChange={(e) => setImageUrl(e.target.value)}\n        />\n      <br/>\n        <label htmlFor=\"bio\">Bio:</label>\n        <br/>\n        <textarea\n          rows=\"3\"\n          id=\"bio\"\n          value={bio}\n          onChange={(e) => setBio(e.target.value)}\n        />\n     <br/>\n        <button type=\"submit\">{isLoading ? \"Loading...\" : \"Sign Up!\"}</button>\n      \n        {errors.map((err) => (\n          <error key={err}>{err}</error>\n        ))}\n      \n        </form>\n    )\n}\n\nexport default SignUpForm;","import { useState } from \"react\";\nimport LoginForm from \"../components/LoginForm\";\nimport SignUpForm from \"../components/SignUpForm\";\n\nfunction Login({ onLogin }) {\n    const [showLogin, setShowLogin] = useState(true);\n\n    return (\n\n        <div>\n            <h1>Character App</h1>\n            {showLogin ? (\n            <div> \n            <LoginForm onLogin={onLogin}/>\n            <p>\n                Don't have an account? \n                <br/>\n                <button onClick={() => setShowLogin(false)}>Sign up!</button>\n            </p>\n            </div>\n            ) : (\n            <div>\n                <SignUpForm />\n                <p>\n                    Already have an account?\n                    <br></br>\n                    <button onClick={() => setShowLogin(true)}>Log in!</button>\n                </p>\n            </div>\n            )}\n        </div>\n    )\n\n}\n\nexport default Login;","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\n\nfunction NewCharacter({ user }) {\n const [name, setName] = useState();\n const [klass, setKlass] = useState();\n const [level, setLevel] = useState();\n const [errors, setErrors] = useState([]);\n const [isLoading, setIsLoading] = useState(false);\n const history = useHistory();\n\n function handleSubmit(e) {\n    e.preventDefault();\n    setIsLoading(true);\n    fetch(\"/characters\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        name,\n        klass,\n        level,\n      }),\n    }).then((r) => {\n      setIsLoading(false);\n      if (r.ok) {\n        history.push(\"/\");\n      } else {\n        r.json().then((err) => setErrors(err.errors));\n      }\n    });\n  }\n\n\n  return (\n      <div>\n          <h1>Create Character</h1>\n          <form onSubmit={handleSubmit}>\n              <label htmlFor=\"name\">Name: </label>\n              <input \n              type=\"text\"\n              id=\"name\"\n              value={name}\n              onChange ={(e) => setName(e.target.value)}/>\n              <br></br>\n              <label htmlFor=\"klass\">Class: </label>\n              <input \n              type=\"text\"\n              id=\"klass\"\n              value={klass}\n              onChange={(e) => setKlass(e.target.value)}/>\n              <br></br>\n              <label htmlFor=\"level\">Level: </label>\n              <input \n              type=\"number\"\n              id=\"level\"\n              value={level}\n              onChange={(e) => setLevel(e.target.value)}/>\n              <button type=\"submit\">Create Character!</button>\n          </form>\n      </div>\n  )\n\n\n}\n\nexport default NewCharacter;","import { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\"\n\n\nfunction CharacterList() {\n    const [characters, setCharacters] = useState([]);\n\n    useEffect(() => {\n        fetch(\"/characters\")\n          .then((r) => r.json())\n          .then(setCharacters);\n      }, []);\n\n      function setData(character) {\n          let { id, name, klass, level } = character;\n          localStorage.setItem(\"ID\", id)\n          localStorage.setItem(\"Name\", name)\n          localStorage.setItem(\"Class\", klass)\n          localStorage.setItem(\"Level\", level)\n          \n      }\n\n      function deleteFunction(character) {\n        fetch((\"/characters/\" + character.id), \n        {\n            method: \"DELETE\"\n        })\n        window.location.reload()\n      }\n      return (\n          <div>\n              {characters.length > 0 ? (\n                  characters.map((character) => (\n                      <div key={character.id}>\n                          <div>\n                              <p>\n                                  <br></br>\n                                  Name: {character.name}\n                                  <br></br>\n                                  Class: {character.klass}\n                                  <br></br>\n                                  Level: {character.level}\n                                  <br></br>\n                              </p>\n                          </div>\n                          <button onClick={() => {\n                     deleteFunction(character)\n                    }}>DELETE</button>  <Link to=\"/update\" onClick={() => setData(character)}>Update</Link>\n                      </div>\n                  ))\n              ) : (\n                  <div>\n                      <h2>No Characters Found</h2>\n                      <Link to=\"/new\">Create New Character!</Link>\n                  </div>    \n              )}\n          </div>\n      )\n}\n\nexport default CharacterList;","import React, { useState, useEffect } from 'react';\nimport { useHistory } from \"react-router-dom\"\n\nfunction UpdateCharacter() {\n    const [id, setID] = useState();\n    const [name, setName] = useState();\n    const [klass, setKlass] = useState();\n    const [level, setLevel] = useState();\n\n    useEffect(() => {\n        setID(localStorage.getItem('ID'))\n        setName(localStorage.getItem('Name'));\n        setKlass(localStorage.getItem('Class'));\n        setLevel(localStorage.getItem('Level'))\n}, []);\n\nconst history = useHistory()\n\nfunction handleUpdate(e) {\n    e.preventDefault();\nfetch((\"/characters/\" + id), \n{\nmethod: \"PUT\",\nheaders: {\n  \"Content-Type\": \"application/json\",\n},\nbody: JSON.stringify({\n  name,\n  klass,\n  level,\n}),\n}).then(response => response.json())\nhistory.goBack();\n}\n\n    return(\n            <div>\n                <h1>Update Character</h1>\n                <form onSubmit={handleUpdate}>\n                    <label htmlFor=\"name\">Name: </label>\n                    <input \n                    type=\"text\"\n                    id=\"name\"\n                    value={name}\n                    onChange ={(e) => setName(e.target.value)}/>\n                    <br></br>\n                    <label htmlFor=\"klass\">Class: </label>\n                    <input \n                    type=\"text\"\n                    id=\"klass\"\n                    value={klass}\n                    onChange={(e) => setKlass(e.target.value)}/>\n                    <br></br>\n                    <label htmlFor=\"level\">Level: </label>\n                    <input \n                    type=\"number\"\n                    id=\"level\"\n                    value={level}\n                    onChange={(e) => setLevel(e.target.value)}/>\n                    <button type=\"submit\">Update</button>\n                </form>\n            </div>\n        )\n      \n    \n}\n\nexport default UpdateCharacter;","import React, {useEffect, useState} from \"react\";\nimport { Switch, Route, BrowserRouter } from \"react-router-dom\"\nimport NavBar from \"./NavBar\";\nimport Login from \"../pages/Login\";\nimport NewCharacter from \"../pages/NewCharacter\";\nimport CharacterList from \"../pages/CharacterList\";\nimport UpdateCharacter from \"./UpdateCharacter\";\n\n\nfunction App() {\n    const [user, setUser] = useState(null);\n\n    useEffect(() => {\n        fetch(\"/me\").then((r) => {\n            if (r.ok) {\n                r.json().then((user) => setUser(user))\n            }\n        });\n    }, []);\n    if (!user) return <Login onLogin={setUser} />\n\nreturn (\n    <BrowserRouter>\n    <NavBar user={user} setUser={setUser}/>\n    <Switch>\n        <Route path='/new'>\n        <NewCharacter user={user}/>\n        </Route>\n        <Route path='/update'>\n            <UpdateCharacter />\n        </Route>\n        <Route path=\"/\">\n            <CharacterList/>\n        </Route>\n       \n\n    </Switch>\n    </BrowserRouter>\n)\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}